{
    "props": {
        "pageProps": {
            "query": {
                "id": "0d9228b29b2146ebb4bbc0a5443055df"
            },
            "ieBrowser": false,
            "needRefresh": false,
            "writingDetail": {
                "id": 82206,
                "outId": "0d9228b29b2146ebb4bbc0a5443055df",
                "articleOutId": "0d9228b29b2146ebb4bbc0a5443055df",
                "html": "<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: unset; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(14, 138, 235); line-height: 1.8em; letter-spacing: 0em; padding-top: 0px; padding-bottom: 0px; padding-left: 10px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: solid; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 5px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(14, 136, 235); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: unset; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\">正文</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">作为后端开发人员，在实际工作中，Web 服务器的使用频率极高，而在众多 Web 服务器中，Tomcat 作为不可或缺的重要框架，理应成为我们必须学习和掌握的重点。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">Tomcat 本质上是一个 Web 框架，那么它的内部机制究竟是如何运作的呢？若不依赖 Tomcat，我们是否有能力自行构建一个 Web 服务器呢？</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">首先，Tomcat 的内部实现极为复杂，涵盖众多组件。我们将在后续章节中对这些细节展开深入探讨。 其次，本章将带领大家亲手构建一个 Web 服务器。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">接下来，让我们一起动手，实现一个简易的 Web 服务器吧。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">（【注】：参考自《How Tomcat Works》一书）</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(14, 136, 235); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">什么是 Http</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">HTTP 是一种协议，全称为超文本传输协议，它使得 Web 服务器与浏览器能够通过互联网传输与接收数据，属于一种请求/响应的通信机制。HTTP 协议的底层依赖于 TCP 协议进行数据传输。目前，HTTP 已经演进至 2.x 版本，历经从 0.9、1.0、1.1 到如今的 2.x，每次迭代都为协议增加了许多新功能。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在 HTTP 的通信模式中，始终由客户端发起请求，服务器接收到请求后处理相应的逻辑，并在处理完成后返回响应数据。客户端接收完数据后，请求流程结束。在此过程中，客户端和服务器均可以对已建立的连接进行中断操作，譬如通过浏览器的停止按钮来终止连接。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">具体 Http 可参考：</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\"><a href=\"https://mp.weixin.qq.com/s/dYolHB0jEnpli7GjLKZTUA\" style=\"color: rgb(14, 136, 235); font-weight: bold; border-top-style: none; border-bottom-style: solid; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(30, 107, 184); border-bottom-color: rgb(14, 136, 235); border-left-color: rgb(30, 107, 184); border-right-color: rgb(30, 107, 184); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; text-decoration-line: none; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word;\">对线面试官 - Http 经典面试题</a></p> \n<h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">Http 请求</span><span class=\"suffix\" style=\"display: none;\"></span></h4> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">一个 HTTP 协议的请求由三部分组成：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">请求行</strong>：包括请求方法、URI 和协议/版本，如 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">GET /index.html HTTP/1.1</code>。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">请求头部</strong>：包含各种元数据信息，如主机地址、用户代理、内容类型等，用于描述客户端和请求的相关信息。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">请求主体</strong>：用于传输实际数据，通常在 POST 或 PUT 请求中包含，如表单数据或文件内容。 \n  </section></li> \n</ol> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">例如：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\">POST&nbsp;/api/gateway/<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">test</span>&nbsp;HTTP/1.1<br>Accept:&nbsp;application/json<br>Accept-Encoding:&nbsp;gzip,&nbsp;deflate,&nbsp;br,&nbsp;zstd<br>Accept-Language:&nbsp;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6<br>Authorization:&nbsp;Bearer&nbsp;eyJhbGiOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMywidXNlcl9uYW1lIjoicWluZ3l1Iiwic2NvcGUiOlsiYWxsIl0sImV4cCI6MTcyMzkyMzgyMywiYXV0aG9yaXRpZXMiOlsiNDQiLCIzOCJdLCJqdGkiOiIwMzBlMjJlOC0xYTk2LTRkOWQtOTY5ZC0zYzA4ZGNjOTVkNTQiLCJjbGllbnRfaWQiOiJxbXMtYWRtaW4iLCJ1c2VybmFtZSI6InFpbmd5dSJ9.EAlw27ZlHSULReScmD3Au740bNDc0zP8r4FfrDswUMLBheEzfEDp68skbhdqn3LWm3o6wpAcYq6lIOsZn2n6SLyPTh2MrhyiU4v6og6UasJ-DnajPyQ8f1RvM-YjLIlXira3KxSFR0QITsc7IH_XQJKJOI5ipYt3hwb44FITRqyAZk7usnTmWaTvuzTGKCkhO05Yi1b-U8N-6y22Gn6AkGBgABkiXceiq6Uv9ZXj7E2dPGBEpyASrr-Zop2wPCgpl8BxHp0adoBcEophMakEj7btRhXh7f4vXMxdnO6MqT3gZI94y8c-Hp44hZlhnkzs7EA2JyG8vf22TDDLiLTCxg<br>Connection:&nbsp;keep-alive<br>Content-Length:&nbsp;64<br>Content-Type:&nbsp;application/json;&nbsp;charset=UTF-8<br>Cookie:&nbsp;JSESSIONID=8757AA1D1D00449F8B37FFFE3C50F00A<br>Host:&nbsp;note.clubsea.cn<br>Origin:&nbsp;https://note.clubsea.cn<br>Referer:&nbsp;https://note.clubsea.cn/<br>Sec-Fetch-Dest:&nbsp;empty<br>Sec-Fetch-Mode:&nbsp;cors<br>Sec-Fetch-Site:&nbsp;same-origin<br>User-Agent:&nbsp;Mozilla/5.0&nbsp;(Macintosh;&nbsp;Intel&nbsp;Mac&nbsp;OS&nbsp;X&nbsp;10_15_7)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)&nbsp;Chrome/127.0.0.0&nbsp;Safari/537.36&nbsp;Edg/127.0.0.0<br>access-control-allow-credentials:&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">true</span><br>lang:&nbsp;zh-cn<br>sec-ch-ua:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Not)A;Brand\"</span>;v=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"99\"</span>,&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Microsoft&nbsp;Edge\"</span>;v=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"127\"</span>,&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Chromium\"</span>;v=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"127\"</span><br>sec-ch-ua-mobile:&nbsp;?0<br>sec-ch-ua-platform:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"macOS\"</span><br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">数据的第一行包含请求方法、URI、协议和版本。在此例中，方法为 POST，URI 为<code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">/api/gateway/test</code>，协议为<code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">HTTP/1.1</code>，协议版本为 1.1。各部分通过空格进行分隔。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">请求头部从第二行开始，采用英文冒号（:）分隔键和值。请求头部与主体内容之间通过一个空行隔开。在此例中，请求主体为表单数据。</p> \n<h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">http 协议-响应</span><span class=\"suffix\" style=\"display: none;\"></span></h4> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">类似于 HTTP 协议的请求，响应也由三部分构成：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">响应行</strong>：包括协议、状态码和状态描述，如 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">HTTP/1.1 200 OK</code>。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">响应头部</strong>：包含各种元数据信息，如内容类型、服务器信息、日期等，用于描述服务器和响应的相关信息。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">响应主体</strong>：传输实际数据的部分，例如网页内容或文件数据。 \n  </section></li> \n</ol> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\">HTTP/1.1&nbsp;200&nbsp;OK<br>Content-Type:&nbsp;application/json<br>Transfer-Encoding:&nbsp;chunked<br>Connection:&nbsp;keep-alive<br>Server:&nbsp;nginx<br>Date:&nbsp;Sat,&nbsp;17&nbsp;Aug&nbsp;2024&nbsp;15:44:03&nbsp;GMT<br>Access-Control-Allow-Origin:&nbsp;https://note.clubsea.cn<br>Access-Control-Allow-Credentials:&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">true</span><br>Access-Control-Expose-Headers:&nbsp;*<br>Access-Control-Max-Age:&nbsp;18000L<br>X-Content-Type-Options:&nbsp;nosniff<br>X-XSS-Protection:&nbsp;1;&nbsp;mode=block<br>Cache-Control:&nbsp;no-cache,&nbsp;no-store,&nbsp;max-age=0,&nbsp;must-revalidate<br>Pragma:&nbsp;no-cache<br>Expires:&nbsp;0<br>X-Frame-Options:&nbsp;DENY<br>Referrer-Policy:&nbsp;no-referrer<br>Access-Control-Allow-Origin:&nbsp;*<br>Access-Control-Allow-Credentials:&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">true</span><br>Access-Control-Allow-Methods:&nbsp;GET,&nbsp;POST,&nbsp;OPTIONS<br>Access-Control-Allow-Headers:&nbsp;token,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,XRequested-With<br>Strict-Transport-Security:&nbsp;max-age=15768000<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">第一行 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">HTTP/1.1 200 OK</code> 表示协议、状态码和状态描述。随后是响应头部部分。响应头部与主体内容之间由一个空行分隔。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(14, 136, 235); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">什么是 Socket</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">Socket，即套接字，是网络连接中的一个端点（end point），它使得应用程序能够在网络上读取和写入数据。通过连接，不同计算机上的不同进程能够互相发送和接收数据。如果应用 A 希望向应用 B 发送数据，A 应用需要知道 B 应用的 IP 地址以及 B 应用开放的套接字端口。在 Java 中，<code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">java.net.Socket</code> 类用来表示一个套接字。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\"><code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">java.net.Socket</code> 最常用的构造方法为：<code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">public Socket(String host, int port);</code>，其中 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">host</code> 表示主机名或 IP 地址，<code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">port</code> 表示套接字端口。接下来，我们来看一个具体的例子：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.io.*;<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.net.Socket;<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">SocketExample</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">main</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(String[]&nbsp;args)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建Socket连接到本地服务器，端口号为8080</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Socket&nbsp;socket&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;Socket(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"127.0.0.1\"</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8080</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取输出流以发送数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;os&nbsp;=&nbsp;socket.getOutputStream();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PrintWriter&nbsp;out&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;PrintWriter(<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;OutputStreamWriter(os),&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">true</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取输入流以接收数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;in&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;BufferedReader(<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;InputStreamReader(socket.getInputStream()));<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;发送HTTP请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"GET&nbsp;/index.jsp&nbsp;HTTP/1.1\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Host:&nbsp;localhost:8080\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Connection:&nbsp;Close\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println();&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;结束请求头</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;读取并输出响应</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder&nbsp;response&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;StringBuilder();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;line;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">while</span>&nbsp;((line&nbsp;=&nbsp;in.readLine())&nbsp;!=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.append(line).append(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\\n\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;输出响应内容</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(response.toString());<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;关闭流和socket连接</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;socket.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(IOException&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">这个示例代码做了以下几点：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    连接到本地服务器的 8080 端口。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    通过输出流发送 HTTP 请求。(通过 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">socket.getOutputStream()</code>方法可以发送数据) \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    通过输入流读取服务器响应。(通过 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">socket.getInputStream()</code>方法可以读取数据。) \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    关闭连接和流。 \n  </section></li> \n</ol> \n<h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">ServerSocket</span><span class=\"suffix\" style=\"display: none;\"></span></h4> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">Socket 表示一个客户端套接字，每次需要发送或接收数据时，都需要创建一个新的 Socket。相对而言，服务器端的应用程序需要考虑更多因素，因为服务器需要随时待命，无法预测何时会有客户端连接。为此，在 Java 中，我们使用 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">java.net.ServerSocket</code> 来表示服务器端的套接字。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">与 Socket 不同，ServerSocket 需要等待客户端的连接请求。一旦有客户端连接，ServerSocket 会创建一个新的 Socket 与客户端进行通信。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">ServerSocket 提供了多种构造方法，我们可以举一个常用的例子。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.io.*;<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.net.*;<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">ServerSocketExample</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">main</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(String[]&nbsp;args)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建ServerSocket对象，绑定到端口8080，连接请求队列长度为1，仅绑定到指定的本地IP地址</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InetAddress&nbsp;bindAddress&nbsp;=&nbsp;InetAddress.getByName(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"127.0.0.1\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServerSocket&nbsp;serverSocket&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;ServerSocket(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8080</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;bindAddress);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Server&nbsp;is&nbsp;listening&nbsp;on&nbsp;port&nbsp;8080,&nbsp;bound&nbsp;to&nbsp;\"</span>&nbsp;+&nbsp;bindAddress);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;等待客户端连接</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Socket&nbsp;clientSocket&nbsp;=&nbsp;serverSocket.accept();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Client&nbsp;connected!\"</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取输入流以接收客户端数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;in&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;BufferedReader(<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;InputStreamReader(clientSocket.getInputStream()));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取输出流以发送数据到客户端</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PrintWriter&nbsp;out&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;PrintWriter(clientSocket.getOutputStream(),&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">true</span>);<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;读取客户端发送的请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;inputLine;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">while</span>&nbsp;((inputLine&nbsp;=&nbsp;in.readLine())&nbsp;!=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Received:&nbsp;\"</span>&nbsp;+&nbsp;inputLine);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(inputLine.isEmpty())&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">break</span>;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;请求头结束，退出循环</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;发送HTTP响应到客户端</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"HTTP/1.1&nbsp;200&nbsp;OK\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Content-Type:&nbsp;text/plain\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Connection:&nbsp;close\"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println();&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;结束响应头</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.println(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Hello,&nbsp;client!\"</span>);&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;响应体内容</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;关闭流和socket连接</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clientSocket.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serverSocket.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(IOException&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">这个示例代码完成了以下步骤：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    创建 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">ServerSocket</code> 实例： \n   <ul style=\"list-style-type: disc; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">8080</code> 是服务器监听的端口。 \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">1</code>是连接请求队列的长度，即最大等待连接数。 \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">InetAddress.getByName(\"127.0.0.1\")</code> 指定了绑定的本地 IP 地址，确保服务器只接受来自本地的连接。 \n     </section></li> \n   </ul> \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    等待客户端连接： \n   <ul style=\"list-style-type: disc; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">serverSocket.accept()</code> 方法阻塞，直到有客户端连接进来。 \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n       处理客户端连接： \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n       读取客户端请求并打印。 \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n       发送一个简单的 HTTP 响应回客户端。 \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n       清理资源： \n     </section></li> \n    <li> \n     <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n       关闭流和套接字以释放资源。 \n     </section></li> \n   </ul> \n  </section></li> \n</ol> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(14, 136, 235); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">HttpServer</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">我们来看一个具体的例子：</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\"><code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">HttpServer</code> 表示一个服务器端的入口，它提供了一个 <code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">main</code> 方法，并在 8080 端口上持续监听，直到有客户端建立连接。当客户端连接到服务器时，服务器通过生成一个 Socket 来处理该连接。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.io.*;<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.net.*;<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">HttpServer</span>&nbsp;</span>{<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;WEB_ROOT&nbsp;是存放&nbsp;HTML&nbsp;和其他文件的目录。<br>&nbsp;&nbsp;&nbsp;*&nbsp;对于这个包，WEB_ROOT&nbsp;是工作目录下的&nbsp;\"webroot\"&nbsp;目录。<br>&nbsp;&nbsp;&nbsp;*&nbsp;工作目录是从运行&nbsp;`java`&nbsp;命令时的文件系统位置。<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">final</span>&nbsp;String&nbsp;WEB_ROOT&nbsp;=<br>&nbsp;&nbsp;&nbsp;&nbsp;System.getProperty(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"user.dir\"</span>)&nbsp;+&nbsp;File.separator&nbsp;&nbsp;+&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"webroot\"</span>;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;关闭命令的标识</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">final</span>&nbsp;String&nbsp;SHUTDOWN_COMMAND&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"/SHUTDOWN\"</span>;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;标记是否接收到关闭命令</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">boolean</span>&nbsp;shutdown&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">false</span>;<br><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">main</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(String[]&nbsp;args)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建&nbsp;HttpServer&nbsp;实例并启动等待请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;HttpServer&nbsp;server&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;HttpServer();<br>&nbsp;&nbsp;&nbsp;&nbsp;server.await();<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;等待客户端连接并处理请求<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">await</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;ServerSocket&nbsp;serverSocket&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;port&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8080</span>;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;服务器监听的端口号</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建&nbsp;ServerSocket&nbsp;绑定到指定的端口和&nbsp;IP&nbsp;地址</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serverSocket&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;ServerSocket(port,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;InetAddress.getByName(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"127.0.0.1\"</span>));<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(IOException&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.exit(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>);&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;如果创建&nbsp;ServerSocket&nbsp;失败，则退出程序</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;循环等待并处理请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">while</span>&nbsp;(!shutdown)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Socket&nbsp;socket&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStream&nbsp;input&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;output&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;等待客户端连接</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;socket&nbsp;=&nbsp;serverSocket.accept();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取客户端请求的输入流和响应的输出流</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;=&nbsp;socket.getInputStream();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;socket.getOutputStream();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建&nbsp;Request&nbsp;对象并解析请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Request&nbsp;request&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;Request(input);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.parse();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建&nbsp;Response&nbsp;对象并设置请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Response&nbsp;response&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;Response(output);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.setRequest(request);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;发送静态资源响应</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response.sendStaticResource();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;关闭与客户端的连接</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;socket.close();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;检查请求的&nbsp;URI&nbsp;是否为关闭命令</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shutdown&nbsp;=&nbsp;request.getUri().equals(SHUTDOWN_COMMAND);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(Exception&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;处理异常并继续等待下一个请求</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">continue</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;关闭服务器套接字</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serverSocket.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(IOException&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>}<br><br></code></pre> \n<h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">Request 对象</span><span class=\"suffix\" style=\"display: none;\"></span></h4> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\"><code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">Request</code> 对象主要完成以下几项工作：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">解析请求数据</strong>：处理客户端发送的所有请求数据。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(14, 136, 235); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">解析 URI</strong>：从请求数据的第一行中提取和解析 URI。 \n  </section></li> \n</ol> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.io.*;<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">Request</span>&nbsp;</span>{<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;输入流，用于读取客户端发送的请求数据</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;InputStream&nbsp;input;<br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;存储请求的&nbsp;URI（统一资源标识符）</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;String&nbsp;uri;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;构造函数，初始化&nbsp;Request&nbsp;对象<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@param</span>&nbsp;input&nbsp;输入流，用于读取客户端请求数据<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Request</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(InputStream&nbsp;input)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">this</span>.input&nbsp;=&nbsp;input;<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;解析客户端请求<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">parse</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建一个&nbsp;StringBuffer&nbsp;用于存储从输入流读取的请求数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;StringBuffer&nbsp;request&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;StringBuffer(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">2048</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;i;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">byte</span>[]&nbsp;buffer&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">byte</span>[<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">2048</span>];&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;缓冲区大小为2048字节</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;从输入流读取数据到缓冲区</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;input.read(buffer);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(IOException&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;处理读取错误</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;-<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;读取失败</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;将缓冲区中的字节转换为字符，并追加到&nbsp;request&nbsp;中</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;(<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;j&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>;&nbsp;j&nbsp;&lt;&nbsp;i;&nbsp;j++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.append((<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">char</span>)&nbsp;buffer[j]);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;输出请求内容到控制台</span><br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(request.toString());<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;从请求内容中解析&nbsp;URI</span><br>&nbsp;&nbsp;&nbsp;&nbsp;uri&nbsp;=&nbsp;parseUri(request.toString());<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;从请求字符串中提取&nbsp;URI<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@param</span>&nbsp;requestString&nbsp;请求的字符串<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@return</span>&nbsp;提取的&nbsp;URI<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;String&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">parseUri</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(String&nbsp;requestString)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;index1,&nbsp;index2;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;查找第一个空格的位置，标记请求方法的结束</span><br>&nbsp;&nbsp;&nbsp;&nbsp;index1&nbsp;=&nbsp;requestString.indexOf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'&nbsp;'</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(index1&nbsp;!=&nbsp;-<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;查找第二个空格的位置，标记请求&nbsp;URI&nbsp;的结束</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index2&nbsp;=&nbsp;requestString.indexOf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'&nbsp;'</span>,&nbsp;index1&nbsp;+&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(index2&nbsp;&gt;&nbsp;index1)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;提取&nbsp;URI&nbsp;部分</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;requestString.substring(index1&nbsp;+&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;index2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;如果未找到有效的&nbsp;URI，返回&nbsp;null</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;获取解析出的&nbsp;URI<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@return</span>&nbsp;请求的&nbsp;URI<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;String&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">getUri</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;uri;<br>&nbsp;&nbsp;}<br><br>}<br><br></code></pre> \n<h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">Response 对象</span><span class=\"suffix\" style=\"display: none;\"></span></h4> \n<blockquote class=\"multiquote-1\" data-tool=\"mdnice编辑器\" style=\"margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; box-shadow: rgb(133, 161, 201) 0px 0px 5px 0px; display: block; overflow-x: auto; overflow-y: auto;\"> <span style=\"display: block; color: rgb(14, 136, 235); font-size: 28px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold;\">★</span> \n <p style=\"text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;\"><code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">Response</code> 主要负责向客户端发送文件内容（如果请求的 URI 指向的文件存在）。</p> \n</blockquote> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;java.io.*;<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">Response</span>&nbsp;</span>{<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;缓冲区的大小，用于读取文件内容</span><br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">private</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">static</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">final</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;BUFFER_SIZE&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1024</span>;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;请求对象</span><br>&nbsp;&nbsp;Request&nbsp;request;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;输出流，用于将响应数据写入客户端</span><br>&nbsp;&nbsp;OutputStream&nbsp;output;<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;构造函数，初始化&nbsp;Response&nbsp;对象<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@param</span>&nbsp;output&nbsp;输出流，用于发送响应数据到客户端<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Response</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(OutputStream&nbsp;output)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">this</span>.output&nbsp;=&nbsp;output;<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;设置请求对象<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@param</span>&nbsp;request&nbsp;请求对象<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">setRequest</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(Request&nbsp;request)</span>&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">this</span>.request&nbsp;=&nbsp;request;<br>&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">/**<br>&nbsp;&nbsp;&nbsp;*&nbsp;发送静态资源（如&nbsp;HTML&nbsp;文件）的响应<br>&nbsp;&nbsp;&nbsp;*&nbsp;<span class=\"hljs-doctag\" style=\"color: #c678dd; line-height: 26px;\">@throws</span>&nbsp;IOException&nbsp;如果发生&nbsp;I/O&nbsp;错误<br>&nbsp;&nbsp;&nbsp;*/</span><br>&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">public</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">void</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">sendStaticResource</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">throws</span>&nbsp;IOException&nbsp;</span>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">byte</span>[]&nbsp;bytes&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">byte</span>[BUFFER_SIZE];&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;创建缓冲区</span><br>&nbsp;&nbsp;&nbsp;&nbsp;FileInputStream&nbsp;fis&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;文件输入流</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">try</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;获取请求&nbsp;URI&nbsp;对应的文件</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;file&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;File(HttpServer.WEB_ROOT,&nbsp;request.getUri());<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(file.exists())&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;如果文件存在，读取文件内容并发送到客户端</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fis&nbsp;=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">new</span>&nbsp;FileInputStream(file);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">int</span>&nbsp;ch&nbsp;=&nbsp;fis.read(bytes,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>,&nbsp;BUFFER_SIZE);&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;读取文件内容到缓冲区</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">while</span>&nbsp;(ch&nbsp;!=&nbsp;-<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.write(bytes,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>,&nbsp;ch);&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;写入输出流</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch&nbsp;=&nbsp;fis.read(bytes,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>,&nbsp;BUFFER_SIZE);&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;继续读取文件内容</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">else</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;如果文件不存在，发送404错误响应</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;errorMessage&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"HTTP/1.1&nbsp;404&nbsp;File&nbsp;Not&nbsp;Found\\r\\n\"</span>&nbsp;+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Content-Type:&nbsp;text/html\\r\\n\"</span>&nbsp;+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Content-Length:&nbsp;23\\r\\n\"</span>&nbsp;+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\\r\\n\"</span>&nbsp;+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"&lt;h1&gt;File&nbsp;Not&nbsp;Found&lt;/h1&gt;\"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;output.write(errorMessage.getBytes());&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;发送错误响应</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">catch</span>&nbsp;(Exception&nbsp;e)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;捕获并打印异常</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(e.toString());<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">finally</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;确保文件输入流被关闭</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(fis&nbsp;!=&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">null</span>)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fis.close();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>}<br><br></code></pre> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: unset; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; flex-direction: unset; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(14, 138, 235); line-height: 1.8em; letter-spacing: 0em; padding-top: 0px; padding-bottom: 0px; padding-left: 10px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: solid; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 5px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(14, 136, 235); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: unset; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\">总结</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">通过上述例子，我们惊喜地发现，在 Java 中实现一个 Web 服务器其实简单明了，代码也非常清晰！</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">既然我们能够如此轻松地实现一个 Web 服务器，那为何还需要 Tomcat 呢？它为我们提供了哪些组件和特性？这些组件又是如何组装起来的？后续章节将逐层解析这些问题。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">让我们共同期待接下来的深入分析！</p> \n<blockquote class=\"multiquote-1\" data-tool=\"mdnice编辑器\" style=\"margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; box-shadow: rgb(133, 161, 201) 0px 0px 5px 0px; display: block; overflow-x: auto; overflow-y: auto;\"> <span style=\"display: block; color: rgb(14, 136, 235); font-size: 28px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold;\">★</span> \n <p style=\"text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;\">如有问题，欢迎微信搜索【码上遇见你】。</p> \n</blockquote> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\"><code style=\"color: rgb(14, 138, 235); font-size: 14px; line-height: 1.8em; letter-spacing: 0em; background-attachment: scroll; background-clip: border-box; background-color: rgba(27, 31, 35, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 2px; margin-right: 2px; padding-top: 2px; padding-bottom: 2px; padding-left: 4px; padding-right: 4px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; overflow-wrap: break-word; font-family: 'Operator Mono', Consolas, Monaco, Menlo, monospace; word-break: break-all;\">免费的Chat GPT可微信搜索【AI贝塔】进行体验，无限使用。</code></p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">好了，本章节到此告一段落。希望对你有所帮助，祝学习顺利。</p>",
                "title": "Tomcat源码分析 （一）----- 手撕Java Web服务器需要准备哪些工作",
                "categoryId": 1,
                "categoryName": "后端",
                "tagId": 100,
                "tagName": "后端",
                "userId": 15593,
                "userOutId": "133408897829",
                "username": "一杯仙气",
                "avatar": "http://thirdwx.qlogo.cn/mmopen/ajNVdqHZLLDWmCTRgT5TiaiaXS91OsqGzuPM0JqlqhXH0aRKNEXKGpANrArqibqoQl6R7hXIk4fImJwzyia2MHu4bQ/132",
                "description": "正文作为后端开发人员，在实际工作中，Web服务器的使用频率极高，而在众多Web服务器中，Tomcat作为不可或缺的重要框架，理应成为我们必须学习和掌握的重点。Tomcat本质上是一个Web框架，那么它",
                "level": 1,
                "publishTime": "2024/08/19",
                "readingNum": 6,
                "likeNum": 0,
                "introduction": null,
                "followWords": null,
                "followPic": null,
                "isFollowing": false,
                "isLike": false,
                "isSelf": false,
                "type": 1,
                "isVisible": true,
                "invisibleReason": null,
                "writingColumn": {
                    "columnOutId": "64c4f43f1fef4bbfadfad8ffc0c91ebf",
                    "name": "默认专栏",
                    "briefIntro": "这是一个默认专栏",
                    "cover": "https://files.mdnice.com/common/community/default-column-cover.jpg",
                    "writingNum": 80,
                    "createTime": "2024-08-06 19:07"
                }
            }
        },
        "__N_SSP": true
    },
    "page": "/writing/[id]",
    "query": {
        "id": "0d9228b29b2146ebb4bbc0a5443055df"
    },
    "buildId": "ErZPkD4oq6iwH2nj6Dpcx",
    "isFallback": false,
    "gssp": true,
    "appGip": true
}