{
    "props": {
        "pageProps": {
            "query": {
                "id": "f75be42bfc67413d8cb4468473279068"
            },
            "ieBrowser": false,
            "needRefresh": false,
            "writingDetail": {
                "id": 83094,
                "outId": "f75be42bfc67413d8cb4468473279068",
                "articleOutId": "f75be42bfc67413d8cb4468473279068",
                "html": "<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">1. 简介</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">简单工厂模式（Simple Factory Pattern）是一种创建型设计模式，它提供了一个创建对象的接口，而不需要指定具体要实例化的类。简单工厂模式通常用于创建相似类型的对象，通过使用一个单一的工厂方法，客户端可以请求工厂生成一个实例，而不必知道实际的类名称。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在Golang中，简单工厂模式可以通过函数或结构体来实现，主要目的是减少客户端代码和对象创建过程之间的耦合。</p> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">2. 使用场景</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">使用简单工厂模式的典型场景包括：</p> \n<ul data-tool=\"mdnice编辑器\" style=\"list-style-type: disc; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">日志记录系统</strong>：需要根据日志类型（如文件日志、控制台日志、远程日志等）生成不同的日志处理器对象。。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">支付系统</strong>：根据支付方式（如支付宝、微信支付、银行卡支付）创建对应的支付处理器对象。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">消息通知系统</strong>：根据通知方式（如短信通知、邮件通知、Push通知）生成不同的通知处理器对象。 \n  </section></li> \n</ul> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">3. 代码示例</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; align-items: center; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: flex; flex-direction: column; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: url('https://files.mdnice.com/pic/d1e2129b-30a8-443d-8ebb-a3f7aa09141e.png'); background-origin: padding-box; background-position-x: 50%; background-position-y: 50%; background-repeat: no-repeat; background-size: contain; width: 40px; height: 20px; align-items: unset; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; color: rgb(0, 0, 0); display: inline-block; font-size: 22px; font-weight: bold; flex-direction: unset; float: unset; justify-content: unset; letter-spacing: 0px; line-height: 1.5em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); text-shadow: rgb(171, 224, 225) 4px 3px 0px; line-height: 1.5em; letter-spacing: 0em; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; transform: none; width: auto; -webkit-box-reflect: unset;\">3.1 简单工厂模式的基本实现</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">下面是一个关于简单工厂模式的Golang实现示例，其中我们实现了一个图形工厂来创建不同的几何形状对象（如圆形和正方形）。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">package</span>&nbsp;main<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"fmt\"</span><br>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;Shape&nbsp;是一个接口，定义了所有形状的行为</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;Shape&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">interface</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Draw()&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">string</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;Circle&nbsp;实现了&nbsp;Shape&nbsp;接口</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;Circle&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(c&nbsp;Circle)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Draw</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Drawing&nbsp;a&nbsp;Circle\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;Square&nbsp;实现了&nbsp;Shape&nbsp;接口</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;Square&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(s&nbsp;Square)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Draw</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Drawing&nbsp;a&nbsp;Square\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;ShapeFactory&nbsp;是一个简单工厂，用于创建&nbsp;Shape&nbsp;对象</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;ShapeFactory&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(f&nbsp;ShapeFactory)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">CreateShape</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(shapeType&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">string</span>)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Shape</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">switch</span>&nbsp;shapeType&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">case</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"circle\"</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;Circle{}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">case</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"square\"</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;Square{}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">default</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">nil</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">main</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;:=&nbsp;ShapeFactory{}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;shape1&nbsp;:=&nbsp;factory.CreateShape(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"circle\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(shape1.Draw())<br><br>&nbsp;&nbsp;&nbsp;&nbsp;shape2&nbsp;:=&nbsp;factory.CreateShape(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"square\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(shape2.Draw())<br>}<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在这个示例中，ShapeFactory 通过 CreateShape 方法根据 shapeType 参数来生成不同的形状对象。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; align-items: center; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: flex; flex-direction: column; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: url('https://files.mdnice.com/pic/d1e2129b-30a8-443d-8ebb-a3f7aa09141e.png'); background-origin: padding-box; background-position-x: 50%; background-position-y: 50%; background-repeat: no-repeat; background-size: contain; width: 40px; height: 20px; align-items: unset; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; color: rgb(0, 0, 0); display: inline-block; font-size: 22px; font-weight: bold; flex-direction: unset; float: unset; justify-content: unset; letter-spacing: 0px; line-height: 1.5em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); text-shadow: rgb(171, 224, 225) 4px 3px 0px; line-height: 1.5em; letter-spacing: 0em; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; transform: none; width: auto; -webkit-box-reflect: unset;\">3.2 单元测试</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">下面是对应的单元测试代码，用于验证工厂方法的正确性：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">package</span>&nbsp;main<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"testing\"</span><br>)<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">TestShapeFactory</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(t&nbsp;*testing.T)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;:=&nbsp;ShapeFactory{}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;shape1&nbsp;:=&nbsp;factory.CreateShape(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"circle\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;shape1&nbsp;==&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">nil</span>&nbsp;||&nbsp;shape1.Draw()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Drawing&nbsp;a&nbsp;Circle\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Drawing&nbsp;a&nbsp;Circle',&nbsp;got&nbsp;'%v'\"</span>,&nbsp;shape1.Draw())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;shape2&nbsp;:=&nbsp;factory.CreateShape(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"square\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;shape2&nbsp;==&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">nil</span>&nbsp;||&nbsp;shape2.Draw()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Drawing&nbsp;a&nbsp;Square\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Drawing&nbsp;a&nbsp;Square',&nbsp;got&nbsp;'%v'\"</span>,&nbsp;shape2.Draw())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;shape3&nbsp;:=&nbsp;factory.CreateShape(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"triangle\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;shape3&nbsp;!=&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">nil</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;nil,&nbsp;got&nbsp;'%v'\"</span>,&nbsp;shape3)<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在这个单元测试中，我们分别测试了 circle、square 和一个无效类型 triangle 的生成过程。测试用例确保工厂生成的对象符合预期。</p> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">4. 总结</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">简单工厂模式是创建型设计模式中的一种，通过工厂类封装了对象的创建过程，从而将对象的创建与使用分离。它适用于需要根据不同条件创建不同实例的场景，可以有效减少代码的耦合度，提高代码的可维护性和可扩展性。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在Golang中，简单工厂模式可以通过函数或结构体实现，通过条件判断创建不同的对象实例。本文中，我们以图形工厂为例，展示了如何使用简单工厂模式来创建不同的几何形状对象，并通过单元测试验证了工厂的正确性。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">尽管简单工厂模式在某些场景下非常实用，但它也存在一定的局限性，如当产品种类过多时，工厂类的复杂度也会相应增加。此外，如果新增产品类型，需要修改工厂类的代码，这可能违反开闭原则。因此，在实际开发中，需要根据具体需求选择合适的设计模式。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">通过学习和使用简单工厂模式，你可以更好地组织代码结构，简化对象创建过程，并提高系统的灵活性。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">这样总结了简单工厂模式的优点及其适用场景，并提到它的局限性，为读者提供了全面的理解。如果有任何进一步的需求，欢迎提出！</p>",
                "title": "Golang 设计模式之简单工厂模式",
                "categoryId": 1,
                "categoryName": "后端",
                "tagId": 100,
                "tagName": "后端",
                "userId": 74412,
                "userOutId": "699359733079",
                "username": "wed",
                "avatar": "",
                "description": "1.简介简单工厂模式（SimpleFactoryPattern）是一种创建型设计模式，它提供了一个创建对象的接口，而不需要指定具体要实例化的类。简单工厂模式通常用于创建相似类型的对象，通过使用一个单一",
                "level": 1,
                "publishTime": "2024/09/04",
                "readingNum": 4,
                "likeNum": 0,
                "introduction": null,
                "followWords": null,
                "followPic": null,
                "isFollowing": false,
                "isLike": false,
                "isSelf": false,
                "type": 1,
                "isVisible": true,
                "invisibleReason": null,
                "writingColumn": {
                    "columnOutId": "a2297b1c0bd34c40a755b555fb068703",
                    "name": "默认专栏",
                    "briefIntro": "这是一个默认专栏",
                    "cover": "https://files.mdnice.com/common/community/default-column-cover.jpg",
                    "writingNum": 3,
                    "createTime": "2024-09-02 11:56"
                }
            }
        },
        "__N_SSP": true
    },
    "page": "/writing/[id]",
    "query": {
        "id": "f75be42bfc67413d8cb4468473279068"
    },
    "buildId": "ErZPkD4oq6iwH2nj6Dpcx",
    "isFallback": false,
    "gssp": true,
    "appGip": true
}