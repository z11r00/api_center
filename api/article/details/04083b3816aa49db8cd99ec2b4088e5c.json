{
    "props": {
        "pageProps": {
            "query": {
                "id": "04083b3816aa49db8cd99ec2b4088e5c"
            },
            "ieBrowser": false,
            "needRefresh": false,
            "writingDetail": {
                "id": 83156,
                "outId": "04083b3816aa49db8cd99ec2b4088e5c",
                "articleOutId": "04083b3816aa49db8cd99ec2b4088e5c",
                "html": "<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/70043/69de1a47-e0c9-41d1-a427-193e9ba8d0be.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在TypeScript中迭代对象键可能会出现一些令人抓狂的情况。来看一个例子，应该大多数人都会经历过：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">type</span>&nbsp;User&nbsp;=&nbsp;{<br>&nbsp;&nbsp;name:&nbsp;string;<br>&nbsp;&nbsp;age:&nbsp;number;<br>};<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">function</span>&nbsp;printUser(user:&nbsp;User)&nbsp;{<br>&nbsp;&nbsp;Object.keys(user).forEach((key)&nbsp;=&gt;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Doesn<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'t&nbsp;work!<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(user[key]);<br>&nbsp;&nbsp;});<br>}<br></span></code></pre> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/70043/e5239430-6adb-4526-8a72-2103f4947d35.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">除非你知道一些技巧，否则这并不简单。这里是我所知道的所有解决方案。</p> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">原因分析</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">使用Object.keys进行迭代不起作用，因为Object.keys返回的是一个字符串数组，而不是所有键的联合。这是TypeScript有意为之，不能修改的。</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/70043/eedb7118-67c5-46cf-a0d7-e6d4df2333b5.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">常见的解决方法是通过keyof typeof，将key的类型强制转换为对象的key值枚举：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;user&nbsp;=&nbsp;{<br>&nbsp;&nbsp;name:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Daniel\"</span>,<br>&nbsp;&nbsp;age:&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">26</span>,<br>};<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(user)&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Array</span>&lt;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user&gt;;<br>keys.forEach(<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">key</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(user[key&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user]);<br>});<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">又或者通过内联缩小类型来解决。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">function</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">isKey</span>&lt;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">T</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">extends</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">object</span>&gt;(<span class=\"hljs-params\" style=\"line-height: 26px;\">x:&nbsp;T,&nbsp;k:&nbsp;PropertyKey</span>):&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">k</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">is</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">keyof</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">T</span>&nbsp;</span>{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;k&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;x;<br>}<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(user);<br>keys.forEach(<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">key</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(isKey(user,&nbsp;key&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(user[key]);<br>&nbsp;&nbsp;}<br>});<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">这里的问题在于：使用Object.keys没有按你预想的那样返回你需要的类型。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">Typescript没有返回包含所有键的类型，而是将其推测为字符串数组。</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/70043/5f6df21c-bc2d-47a5-bc23-65aec948c555.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">TypeScript对于对象类型的设计是开放式的。不可否认，在许多情况下，我们不能保证Object.keys返回的键实际上存在于对象上，所以将它们推测为字符串数组是唯一个退一步海阔天空的解决方案。这里有这个问题相关的讨论：<a href=\"https://github.com/Microsoft/TypeScript/issues/12870\" style=\"color: rgb(30, 107, 184); font-weight: bold; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; text-decoration-line: none; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; overflow-wrap: break-word;\">github issue</a></p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">for...in循环，也同样有类似的问题。</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/70043/bbbff501-e504-450c-be1e-276196f0ff48.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">解决方案</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">也许在许多情况下，你是知道对象的key值有哪些的。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">那么，你该怎么做呢？</p> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">解决方案1：将类型转换为keyof typeof</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">第一个方案是使用keyof typeof将键转换为更具体的类型。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在下面的示例中，我们将Object.keys的结果转换为包含这些键的数组。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;user&nbsp;=&nbsp;{<br>&nbsp;&nbsp;name:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Daniel\"</span>,<br>&nbsp;&nbsp;age:&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">26</span>,<br>};<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(user)&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Array</span>&lt;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user&gt;;<br>keys.forEach(<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">key</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(user[key]);<br>});<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">也可以将key强制转换为对应的类型。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(user);<br>keys.forEach(<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">key</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(user[key&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user]);<br>});<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">使用as在任何形式上通常是不安全的，确实如此，它会对现在或者将来存在一些风险，因为它是人为的指认。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;user&nbsp;=&nbsp;{<br>&nbsp;&nbsp;name:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Daniel\"</span>,<br>&nbsp;&nbsp;age:&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">26</span>,<br>};<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;nonExistentKey&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"id\"</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;keyof&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">typeof</span>&nbsp;user;<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;value&nbsp;=&nbsp;user[nonExistentKey];<br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;没有错误！</span><br></code></pre> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">解决方案2：类型谓词</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">让我们看看一些更智能、更安全的解决方案。如何使用类型谓词？</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">通过使用isKey，我们可以在索引之前检查键是否真的在对象上。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">我们通过在isKey的返回类型中使用is语法，让TypeScript正确推断。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">function</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">isKey</span>&lt;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">T</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">extends</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">object</span>&gt;(<span class=\"hljs-params\" style=\"line-height: 26px;\">x:&nbsp;T,&nbsp;k:&nbsp;PropertyKey</span>):&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">k</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">is</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">keyof</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">T</span>&nbsp;</span>{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;k&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;x;<br>}<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(user);<br>keys.forEach(<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">key</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;(isKey(user,&nbsp;key))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(user[key]);<br>&nbsp;&nbsp;}<br>});<br></code></pre> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">解决方案3：泛型函数</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">让我们看看一个稍微奇怪的解决方案。在泛型函数内，使用in操作符确实会将类型缩小到键。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">function</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">printEachKey</span>&lt;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">T</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">extends</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">object</span>&gt;(<span class=\"hljs-params\" style=\"line-height: 26px;\">obj:&nbsp;T</span>)&nbsp;</span>{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;(<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;key&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;obj)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(obj[key]);<br>&nbsp;&nbsp;}<br>}<br><br>printEachKey({<br>&nbsp;&nbsp;name:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Daniel\"</span>,<br>&nbsp;&nbsp;age:&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">26</span>,<br>});<br></code></pre> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">解决方案4：将Object.keys包装在函数中</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">另一个解决方案是将Object.keys包装在一个返回转换后类型的函数中。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;objectKeys&nbsp;=&nbsp;&lt;T&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">extends</span>&nbsp;object&gt;<span class=\"hljs-function\" style=\"line-height: 26px;\">(<span class=\"hljs-params\" style=\"line-height: 26px;\">obj:&nbsp;T</span>)&nbsp;=&gt;</span>&nbsp;{<br>&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Object</span>.keys(obj)&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;<span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">Array</span>&lt;keyof&nbsp;T&gt;;<br>};<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">const</span>&nbsp;keys&nbsp;=&nbsp;objectKeys({<br>&nbsp;&nbsp;name:&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Daniel\"</span>,<br>&nbsp;&nbsp;age:&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">26</span>,<br>});<br><span class=\"hljs-built_in\" style=\"color: #e6c07b; line-height: 26px;\">console</span>.log(keys);<br></code></pre> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">结论</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">个人更加推荐方案一，因为它更具可读性，理解上也更直观。</p>",
                "title": "TypeScript进阶：解锁对象键迭代的隐藏技巧",
                "categoryId": 2,
                "categoryName": "前端",
                "tagId": 107,
                "tagName": "前端",
                "userId": 70043,
                "userOutId": "556682603593",
                "username": "miniwa",
                "avatar": "",
                "description": "在TypeScript中迭代对象键可能会出现一些令人抓狂的情况。来看一个例子，应该大多数人都会经历过：type&nbsp;User&nbsp;=&nbsp;{&nbsp;&nbsp;name:&nbs",
                "level": 1,
                "publishTime": "2024/09/05",
                "readingNum": 1,
                "likeNum": 0,
                "introduction": null,
                "followWords": null,
                "followPic": null,
                "isFollowing": false,
                "isLike": false,
                "isSelf": false,
                "type": 1,
                "isVisible": true,
                "invisibleReason": null,
                "writingColumn": {
                    "columnOutId": "4c43629c66cf4b8bafa140fd8a28b083",
                    "name": "默认专栏",
                    "briefIntro": "这是一个默认专栏",
                    "cover": "https://files.mdnice.com/common/community/default-column-cover.jpg",
                    "writingNum": 28,
                    "createTime": "2024-08-06 19:02"
                }
            }
        },
        "__N_SSP": true
    },
    "page": "/writing/[id]",
    "query": {
        "id": "04083b3816aa49db8cd99ec2b4088e5c"
    },
    "buildId": "ErZPkD4oq6iwH2nj6Dpcx",
    "isFallback": false,
    "gssp": true,
    "appGip": true
}