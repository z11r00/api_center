{
    "props": {
        "pageProps": {
            "query": {
                "id": "92a8c61ec0d34c70a25df9c30e4292d7"
            },
            "ieBrowser": false,
            "needRefresh": false,
            "writingDetail": {
                "id": 82928,
                "outId": "92a8c61ec0d34c70a25df9c30e4292d7",
                "articleOutId": "92a8c61ec0d34c70a25df9c30e4292d7",
                "html": "<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">Diffusion 模型生成图片太慢了？用 AE(AutoEncoder) 和 VAE(Variational AutoEncoder) 压缩图片加速一波！</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">本文分为两个部分：理论学习和代码实践。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">先预览一下 AE 和 VAE 模型的效果：</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/d5f62102-5768-44ff-bef7-406f1444b348.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">理论学习</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">本文价值</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">Diffusion 模型生成图片的效果堪称惊艳，但是推理速度慢的问题被广泛吐槽。本文介绍 Diffusion 模型推理加速的一种常见方式：用 AE(AutoEncoder) 和 VAE(Variational AutoEncoder) 进行图片压缩/反压缩。理论部分学完之后立即用代码进行实践，彻底掌握 AE/VAE。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 20px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">AE 基础知识</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/0238d795-9903-4ade-8a80-3df08e9bdd08.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">自编码器（AutoEncoder，AE）是一种无监督学习的神经网络模型，主要用于数据压缩和特征学习。它的核心结构包括两个主要部分：编码器和解码器。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">编码器负责将输入数据压缩到一个低维的潜在空间，这个过程可以看作是提取输入数据的关键特征。解码器则尝试从这个压缩的表示重构原始输入，目标是使重构的输出尽可能接近原始输入。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">AE 通过最小化重构误差来训练，这促使网络学习输入数据的最重要特征。训练完成后，编码器可以用于降维、特征提取或数据压缩，而完整的 AE 可以用于去噪或异常检测等任务。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">AE 的优点包括结构简单、训练相对快速，以及可以学习紧凑的特征表示。然而，它也存在一些局限性，如生成能力有限，难以生成新的、有意义的样本。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 20px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">VAE 基础知识</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/6b051f2b-5f85-46d0-ab8c-793210b2f3e1.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">变分自编码器（VAE）是自编码器的一种概率变体，它结合了变分推断和神经网络，用于生成模型和表示学习。VAE 的核心思想是将输入数据编码为概率分布，而不是固定的向量。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">VAE 的结构包括编码器、采样层和解码器。编码器将输入映射到潜在空间的均值和方差，采样层从这个分布中采样，解码器则从采样的潜在向量重构输入。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">VAE 的训练目标包括两部分：重构损失和 KL 散度。重构损失确保模型能够准确重建输入，而 KL 散度则作为正则化项，使潜在空间的分布接近标准正态分布。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">相比传统的自编码器，VAE 具有更强的生成能力，可以生成新的、合理的样本。它的潜在空间是连续的，便于插值，并且具有一定的正则化效果，有助于减少过拟合。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">VAE 广泛应用于图像生成、异常检测、数据增强等领域。然而，它的训练过程可能较为复杂和不稳定，且 KL 散度项可能导致模型忽视部分输入信息。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 20px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">对比 AE 和 VAE</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<section class=\"table-container\" data-tool=\"mdnice编辑器\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; overflow-x: auto;\"> \n <table style=\"display: table; text-align: left;\"> \n  <thead> \n   <tr> \n    <th style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgb(240, 240, 240); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">特性</strong><br></th> \n    <th style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgb(240, 240, 240); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">AutoEncoder (AE)</strong><br></th> \n    <th style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgb(240, 240, 240); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">Variational AutoEncoder (VAE)</strong><br></th> \n   </tr> \n  </thead> \n  <tbody style=\"font-size: 16px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: normal; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: initial; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial;\"> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">模型结构</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 编码器：将输入压缩到潜在空间<br>• 解码器：从潜在空间重构输入<br>• 通常是确定性的<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 编码器：将输入映射到潜在空间的均值和方差<br>• 采样层：从编码器输出的分布中采样<br>• 解码器：从采样的潜在向量重构输入<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">潜在空间</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">离散的点<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">连续的概率分布<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">损失函数</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">重构损失（如 MSE）<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">重构损失 + KL 散度（正则化项）<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">训练过程</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">1. 前向传播<br>2. 计算重构误差<br>3. 反向传播<br>4. 更新参数<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">1. 前向传播（包括采样步骤）<br>2. 计算重构误差和 KL 散度<br>3. 反向传播<br>4. 更新参数<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">推理过程</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">1. 输入通过编码器<br>2. 潜在向量通过解码器<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">1. 输入通过编码器得到分布参数<br>2. 从分布中采样<br>3. 采样的向量通过解码器<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">优点</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 结构简单，易于理解和实现<br>• 训练相对快速<br>• 可以学习紧凑的特征表示<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 生成能力强<br>• 潜在空间连续，便于插值<br>• 可以生成新的、合理的样本<br>• 具有正则化效果，减少过拟合<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">缺点</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 生成能力有限<br>• 潜在空间可能不连续<br>• 难以生成新的、有意义的样本<br>• 可能过拟合训练数据<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 结构和训练过程较复杂<br>• 训练可能更慢且不稳定<br>• KL 散度项可能导致模型忽视部分输入<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">应用场景</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 数据压缩<br>• 降噪<br>• 特征提取<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 图像生成<br>• 异常检测<br>• 数据增强<br>• 条件生成<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">潜在空间特性</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 不保证平滑或有意义的插值<br>• 可能存在\"空洞\"<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">• 通常呈现高斯分布<br>• 允许平滑插值<br>• 潜在空间更加结构化<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">生成新样本</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">困难，通常需要额外的技巧<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">容易，直接从先验分布采样即可<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(255, 255, 255); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">对异常值的敏感度</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">较高，可能过度拟合异常值<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">较低，由于正则化效果而更鲁棒<br></td> \n   </tr> \n   <tr style=\"color: rgb(0, 0, 0); background-attachment: scroll; background-clip: border-box; background-color: rgb(248, 248, 248); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto;\"> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\"><strong style=\"color: rgb(0, 0, 0); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">可解释性</strong><br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">潜在表示可能难以解释<br></td> \n    <td style=\"padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; min-width: 85px; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgba(204, 204, 204, 0.4); border-bottom-color: rgba(204, 204, 204, 0.4); border-left-color: rgba(204, 204, 204, 0.4); border-right-color: rgba(204, 204, 204, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">潜在空间通常更有结构，便于解释<br></td> \n   </tr> \n  </tbody> \n </table> \n</section> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">代码实践</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">为了深刻理解 AE 和 VAE 的模型结构和训练/评测流程，我们自己动手实现在 MNIST 数据集上训练和评测 AE 和 VAE 模型。先看一下最终 AE 和 VAE 的重构效果：</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/120aba10-6d76-4dcc-b82d-d0fa6e31309c.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">我们先实现最简单的 Baseline 版本，这个版本的效果比较一般，主要是因为 latent space 维度为 3；然后我们改进 Baseline 版本，改进点包括：</p> \n<ol data-tool=\"mdnice编辑器\" style=\"list-style-type: decimal; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    将 latent space 维度从 3 --&gt; 16； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    增加了网络深度和宽度； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    使用了 LeakyReLU 激活函数； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    添加了批归一化； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    使用了 AdamW 优化器和学习率调度器； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    增加了训练轮数到 500； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    添加了简单的数据增强（随机旋转和噪声）； \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\">\n    对 VAE 的 KL 散度使用了 β 参数（设为 0.5）来平衡重构质量和潜在空间的规则性。 \n  </section></li> \n</ol> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">Baseline 版本</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">先看效果图，再看代码：</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/333cfce4-9269-4968-9c93-3e704806554f.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">完整的代码如下：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch,os<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch.nn&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;nn<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch.optim&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;optim<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">from</span>&nbsp;torch.utils.data&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;DataLoader<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">from</span>&nbsp;torchvision&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;datasets,&nbsp;transforms<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;matplotlib.pyplot&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;plt<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;设置随机种子以确保结果可复现</span><br>torch.manual_seed(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">42</span>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;准备MNIST数据集</span><br>transform&nbsp;=&nbsp;transforms.Compose([transforms.ToTensor()])<br>train_dataset&nbsp;=&nbsp;datasets.MNIST(root=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'./data'</span>,&nbsp;train=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;download=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;transform=transform)<br>test_dataset&nbsp;=&nbsp;datasets.MNIST(root=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'./data'</span>,&nbsp;train=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">False</span>,&nbsp;download=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;transform=transform)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;创建数据加载器</span><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;batch_size:&nbsp;每批处理的样本数</span><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;shuffle:&nbsp;是否在每个epoch打乱数据</span><br>train_loader&nbsp;=&nbsp;DataLoader(train_dataset,&nbsp;batch_size=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;shuffle=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>test_loader&nbsp;=&nbsp;DataLoader(test_dataset,&nbsp;batch_size=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;shuffle=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">False</span>)<br><br><span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">AE</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(nn.Module)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">__init__</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(AE,&nbsp;self).__init__()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;编码器：将28x28的输入压缩到3维潜在空间</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.encoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;解码器：将3维潜在空间重构为28x28的输出</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.decoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Sigmoid()&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;使用Sigmoid确保输出在[0,1]范围内</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">forward</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前向传播函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;(torch.Tensor):&nbsp;输入图像张量，形状为&nbsp;(batch_size,&nbsp;1,&nbsp;28,&nbsp;28)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;torch.Tensor:&nbsp;重构后的图像张量，形状为&nbsp;(batch_size,&nbsp;1,&nbsp;28,&nbsp;28)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;将输入展平</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoded&nbsp;=&nbsp;self.encoder(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decoded&nbsp;=&nbsp;self.decoder(encoded)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;decoded.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;重塑为原始图像形状</span><br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;初始化AE模型</span><br>ae_model&nbsp;=&nbsp;AE()<br>ae_optimizer&nbsp;=&nbsp;optim.Adam(<br>&nbsp;&nbsp;&nbsp;&nbsp;ae_model.parameters(),<br>&nbsp;&nbsp;&nbsp;&nbsp;lr=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.0001</span><br>)<br>ae_criterion&nbsp;=&nbsp;nn.MSELoss()&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;使用均方误差作为重构损失</span><br><br><span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">VAE</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(nn.Module)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">__init__</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(VAE,&nbsp;self).__init__()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;编码器</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.encoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;均值和对数方差的全连接层</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fc_mu&nbsp;=&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fc_logvar&nbsp;=&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;解码器</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.decoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.ReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Sigmoid()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">encode</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;编码函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;(torch.Tensor):&nbsp;输入图像张量，形状为&nbsp;(batch_size,&nbsp;784)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tuple(torch.Tensor,&nbsp;torch.Tensor):&nbsp;均值和对数方差，每个的形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;self.encoder(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.fc_mu(h),&nbsp;self.fc_logvar(h)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">reparameterize</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;mu,&nbsp;logvar)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重参数化技巧<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mu&nbsp;(torch.Tensor):&nbsp;均值，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logvar&nbsp;(torch.Tensor):&nbsp;对数方差，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;torch.Tensor:&nbsp;采样得到的潜在变量，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std&nbsp;=&nbsp;torch.exp(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.5</span>&nbsp;*&nbsp;logvar)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eps&nbsp;=&nbsp;torch.randn_like(std)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;mu&nbsp;+&nbsp;eps&nbsp;*&nbsp;std<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">decode</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;z)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解码函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;(torch.Tensor):&nbsp;潜在变量，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;torch.Tensor:&nbsp;重构的图像，形状为&nbsp;(batch_size,&nbsp;784)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.decoder(z)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">forward</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前向传播函数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;(torch.Tensor):&nbsp;输入图像张量，形状为&nbsp;(batch_size,&nbsp;1,&nbsp;28,&nbsp;28)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tuple:&nbsp;(重构图像,&nbsp;均值,&nbsp;对数方差)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;重构图像&nbsp;(torch.Tensor):&nbsp;形状为&nbsp;(batch_size,&nbsp;1,&nbsp;28,&nbsp;28)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;均值&nbsp;(torch.Tensor):&nbsp;形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;对数方差&nbsp;(torch.Tensor):&nbsp;形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mu,&nbsp;logvar&nbsp;=&nbsp;self.encode(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;=&nbsp;self.reparameterize(mu,&nbsp;logvar)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.decode(z).view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;mu,&nbsp;logvar<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;初始化VAE模型</span><br>vae_model&nbsp;=&nbsp;VAE()<br>vae_optimizer&nbsp;=&nbsp;optim.Adam(<br>&nbsp;&nbsp;&nbsp;&nbsp;vae_model.parameters(),<br>&nbsp;&nbsp;&nbsp;&nbsp;lr=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.0001</span><br>)<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">vae_loss</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(recon_x,&nbsp;x,&nbsp;mu,&nbsp;logvar)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;VAE损失函数：重构损失&nbsp;+&nbsp;KL散度<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;recon_x&nbsp;(torch.Tensor):&nbsp;重构的图像，形状为&nbsp;(batch_size,&nbsp;784)<br>&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;(torch.Tensor):&nbsp;原始图像，形状为&nbsp;(batch_size,&nbsp;784)<br>&nbsp;&nbsp;&nbsp;&nbsp;mu&nbsp;(torch.Tensor):&nbsp;均值，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;logvar&nbsp;(torch.Tensor):&nbsp;对数方差，形状为&nbsp;(batch_size,&nbsp;3)<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;torch.Tensor:&nbsp;标量，表示总损失<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;BCE&nbsp;=&nbsp;nn.functional.binary_cross_entropy(recon_x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;reduction=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'sum'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;KLD&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-0.5</span>&nbsp;*&nbsp;torch.sum(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>&nbsp;+&nbsp;logvar&nbsp;-&nbsp;mu.pow(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">2</span>)&nbsp;-&nbsp;logvar.exp())<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;BCE&nbsp;+&nbsp;KLD<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">train</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(epoch,&nbsp;model,&nbsp;optimizer,&nbsp;criterion,&nbsp;is_vae=False)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;训练函数<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;epoch&nbsp;(int):&nbsp;当前训练的轮数<br>&nbsp;&nbsp;&nbsp;&nbsp;model&nbsp;(nn.Module):&nbsp;要训练的模型（AE或VAE）<br>&nbsp;&nbsp;&nbsp;&nbsp;optimizer&nbsp;(torch.optim.Optimizer):&nbsp;优化器<br>&nbsp;&nbsp;&nbsp;&nbsp;criterion&nbsp;(callable):&nbsp;损失函数（仅用于AE）<br>&nbsp;&nbsp;&nbsp;&nbsp;is_vae&nbsp;(bool):&nbsp;是否为VAE模型<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;None<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;model.train()<br>&nbsp;&nbsp;&nbsp;&nbsp;train_loss&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;batch_idx,&nbsp;(data,&nbsp;_)&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;enumerate(train_loader):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optimizer.zero_grad()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;is_vae:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recon_batch,&nbsp;mu,&nbsp;logvar&nbsp;=&nbsp;model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss&nbsp;=&nbsp;vae_loss(recon_batch,&nbsp;data,&nbsp;mu,&nbsp;logvar)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">else</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recon_batch&nbsp;=&nbsp;model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss&nbsp;=&nbsp;criterion(recon_batch,&nbsp;data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss.backward()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;train_loss&nbsp;+=&nbsp;loss.item()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optimizer.step()<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f'====&gt;&nbsp;Epoch:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{epoch}</span>&nbsp;Average&nbsp;loss:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{train_loss&nbsp;/&nbsp;len(train_loader.dataset):<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">.4</span>f}</span>'</span>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;训练AE和VAE模型</span><br>num_epochs&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">200</span><br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">compare_reconstructions</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(ae_model,&nbsp;vae_model)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;比较AE和VAE模型的重构效果<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;参数:<br>&nbsp;&nbsp;&nbsp;&nbsp;ae_model&nbsp;(nn.Module):&nbsp;训练好的AE模型<br>&nbsp;&nbsp;&nbsp;&nbsp;vae_model&nbsp;(nn.Module):&nbsp;训练好的VAE模型<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;返回:<br>&nbsp;&nbsp;&nbsp;&nbsp;None&nbsp;(显示图像)<br>&nbsp;&nbsp;&nbsp;&nbsp;\"\"\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ae_model.eval()<br>&nbsp;&nbsp;&nbsp;&nbsp;vae_model.eval()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">with</span>&nbsp;torch.no_grad():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;next(iter(test_loader))[<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>][:<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>]&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;获取8个测试样本</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ae_recon&nbsp;=&nbsp;ae_model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vae_recon,&nbsp;_,&nbsp;_&nbsp;=&nbsp;vae_model(data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;将原始图像、AE重构和VAE重构拼接在一起</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comparison&nbsp;=&nbsp;torch.cat([data,&nbsp;ae_recon,&nbsp;vae_recon])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.figure(figsize=(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">4</span>))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;i&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;range(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">24</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.subplot(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;i+<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.imshow(comparison[i].squeeze().numpy(),&nbsp;cmap=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'gray'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.axis(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'off'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.tight_layout()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.show()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;创建保存路径</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_dir&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"/root/autodl-tmp/projects/diffuser/handwritten_algos/ldm/res_images\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.makedirs(save_dir,&nbsp;exist_ok=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;保存图像</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_path&nbsp;=&nbsp;os.path.join(save_dir,&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{epoch}</span>.png\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.savefig(save_path)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"=&gt;&nbsp;saved&nbsp;to&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{save_path}</span>\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.close()&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;关闭图像，防止内存泄漏</span><br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;epoch&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;range(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;num_epochs&nbsp;+&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;train(epoch,&nbsp;ae_model,&nbsp;ae_optimizer,&nbsp;ae_criterion)<br>&nbsp;&nbsp;&nbsp;&nbsp;train(epoch,&nbsp;vae_model,&nbsp;vae_optimizer,&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">None</span>,&nbsp;is_vae=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;比较重构效果</span><br>&nbsp;&nbsp;&nbsp;&nbsp;compare_reconstructions(ae_model,&nbsp;vae_model)<br></code></pre> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 22px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">改进版本</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">先看最终效果，再看代码：</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/aad648c9-5247-4a5c-aedb-b4dbf3fe831f.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">可以看出只要训练得当，AE 和 VAE 都能很好的压缩/反压缩图片，重构的效果很棒，肉眼看不出显著的差异！</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">完整代码如下：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;os<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch.nn&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;nn<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;torch.optim&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;optim<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">from</span>&nbsp;torch.utils.data&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;DataLoader<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">from</span>&nbsp;torchvision&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;datasets,&nbsp;transforms<br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;matplotlib.pyplot&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">as</span>&nbsp;plt<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;设置随机种子</span><br>torch.manual_seed(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">42</span>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;检查是否有可用的&nbsp;GPU</span><br>device&nbsp;=&nbsp;torch.device(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"cuda\"</span>&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;torch.cuda.is_available()&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">else</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"cpu\"</span>)<br>print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"Using&nbsp;device:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{device}</span>\"</span>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;数据预处理和加载</span><br>transform&nbsp;=&nbsp;transforms.Compose([<br>&nbsp;&nbsp;&nbsp;&nbsp;transforms.RandomRotation(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">10</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;transforms.ToTensor(),<br>])<br><br>train_dataset&nbsp;=&nbsp;datasets.MNIST(root=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'./data'</span>,&nbsp;train=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;download=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;transform=transform)<br>test_dataset&nbsp;=&nbsp;datasets.MNIST(root=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'./data'</span>,&nbsp;train=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">False</span>,&nbsp;download=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>,&nbsp;transform=transform)<br><br>train_loader&nbsp;=&nbsp;DataLoader(train_dataset,&nbsp;batch_size=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;num_workers=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;shuffle=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>test_loader&nbsp;&nbsp;=&nbsp;DataLoader(test_dataset,&nbsp;batch_size=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;num_workers=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;shuffle=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">False</span>)<br><br><span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">ImprovedAE</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(nn.Module)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">__init__</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(ImprovedAE,&nbsp;self).__init__()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.encoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">16</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.decoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">16</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">64</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Sigmoid()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">forward</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoded&nbsp;=&nbsp;self.encoder(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decoded&nbsp;=&nbsp;self.decoder(encoded)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;decoded.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)<br><br><span class=\"hljs-class\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">class</span>&nbsp;<span class=\"hljs-title\" style=\"color: #e6c07b; line-height: 26px;\">ImprovedVAE</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(nn.Module)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">__init__</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(ImprovedVAE,&nbsp;self).__init__()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.encoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fc_mu&nbsp;=&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">16</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.fc_logvar&nbsp;=&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">16</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.decoder&nbsp;=&nbsp;nn.Sequential(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">16</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">128</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.BatchNorm1d(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.LeakyReLU(),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Linear(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">256</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nn.Sigmoid()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">encode</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;self.encoder(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.fc_mu(h),&nbsp;self.fc_logvar(h)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">reparameterize</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;mu,&nbsp;logvar)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std&nbsp;=&nbsp;torch.exp(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.5</span>&nbsp;*&nbsp;logvar)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eps&nbsp;=&nbsp;torch.randn_like(std)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;mu&nbsp;+&nbsp;eps&nbsp;*&nbsp;std<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">decode</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;z)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.decoder(z)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">forward</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(self,&nbsp;x)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mu,&nbsp;logvar&nbsp;=&nbsp;self.encode(x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;=&nbsp;self.reparameterize(mu,&nbsp;logvar)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;self.decode(z).view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;mu,&nbsp;logvar<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;初始化改进后的模型并移动到&nbsp;GPU</span><br>ae_model&nbsp;=&nbsp;ImprovedAE().to(device)<br>vae_model&nbsp;=&nbsp;ImprovedVAE().to(device)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;使用&nbsp;AdamW&nbsp;优化器</span><br>ae_optimizer&nbsp;=&nbsp;optim.AdamW(ae_model.parameters(),&nbsp;lr=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.001</span>,&nbsp;weight_decay=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1e-5</span>)<br>vae_optimizer&nbsp;=&nbsp;optim.AdamW(vae_model.parameters(),&nbsp;lr=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.001</span>,&nbsp;weight_decay=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1e-5</span>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;学习率调度器</span><br>ae_scheduler&nbsp;=&nbsp;optim.lr_scheduler.ReduceLROnPlateau(ae_optimizer,&nbsp;patience=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">10</span>,&nbsp;factor=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.5</span>,&nbsp;verbose=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>vae_scheduler&nbsp;=&nbsp;optim.lr_scheduler.ReduceLROnPlateau(vae_optimizer,&nbsp;patience=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">10</span>,&nbsp;factor=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.5</span>,&nbsp;verbose=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br><br>ae_criterion&nbsp;=&nbsp;nn.MSELoss()<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">vae_loss</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(recon_x,&nbsp;x,&nbsp;mu,&nbsp;logvar,&nbsp;beta=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1.0</span>)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;BCE&nbsp;=&nbsp;nn.functional.binary_cross_entropy(recon_x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;x.view(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-1</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>*<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">28</span>),&nbsp;reduction=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'sum'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;KLD&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">-0.5</span>&nbsp;*&nbsp;torch.sum(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>&nbsp;+&nbsp;logvar&nbsp;-&nbsp;mu.pow(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">2</span>)&nbsp;-&nbsp;logvar.exp())<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;BCE&nbsp;+&nbsp;beta&nbsp;*&nbsp;KLD<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">train</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(epoch,&nbsp;model,&nbsp;optimizer,&nbsp;scheduler,&nbsp;criterion,&nbsp;is_vae=False)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;model.train()<br>&nbsp;&nbsp;&nbsp;&nbsp;train_loss&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;batch_idx,&nbsp;(data,&nbsp;_)&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;enumerate(train_loader):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;data.to(device)&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;将数据移动到&nbsp;GPU</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optimizer.zero_grad()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;is_vae:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recon_batch,&nbsp;mu,&nbsp;logvar&nbsp;=&nbsp;model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss&nbsp;=&nbsp;vae_loss(recon_batch,&nbsp;data,&nbsp;mu,&nbsp;logvar,&nbsp;beta=<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0.5</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">else</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recon_batch&nbsp;=&nbsp;model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss&nbsp;=&nbsp;criterion(recon_batch,&nbsp;data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loss.backward()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;train_loss&nbsp;+=&nbsp;loss.item()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;optimizer.step()<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;avg_loss&nbsp;=&nbsp;train_loss&nbsp;/&nbsp;len(train_loader.dataset)<br>&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f'====&gt;&nbsp;Epoch:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{epoch}</span>&nbsp;Average&nbsp;loss:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{avg_loss:<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">.4</span>f}</span>'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;scheduler.step(avg_loss)<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;avg_loss<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">def</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">compare_reconstructions</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(ae_model,&nbsp;vae_model,&nbsp;epoch)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;ae_model.eval()<br>&nbsp;&nbsp;&nbsp;&nbsp;vae_model.eval()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">with</span>&nbsp;torch.no_grad():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;next(iter(test_loader))[<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>][:<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>].to(device)&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;将数据移动到&nbsp;GPU</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ae_recon&nbsp;=&nbsp;ae_model(data)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vae_recon,&nbsp;_,&nbsp;_&nbsp;=&nbsp;vae_model(data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;将重构结果移回&nbsp;CPU&nbsp;以进行可视化</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;data.cpu()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ae_recon&nbsp;=&nbsp;ae_recon.cpu()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vae_recon&nbsp;=&nbsp;vae_recon.cpu()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comparison&nbsp;=&nbsp;torch.cat([data,&nbsp;ae_recon,&nbsp;vae_recon])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.figure(figsize=(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">12</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">4</span>))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;i&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;range(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">24</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.subplot(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">3</span>,&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">8</span>,&nbsp;i+<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.imshow(comparison[i].squeeze().numpy(),&nbsp;cmap=<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'gray'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.axis(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'off'</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.tight_layout()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;创建保存路径</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_dir&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"/root/autodl-tmp/projects/diffuser/handwritten_algos/ldm/res_images_v2\"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.makedirs(save_dir,&nbsp;exist_ok=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;保存图像</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_path&nbsp;=&nbsp;os.path.join(save_dir,&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"epoch_<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{epoch}</span>.png\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.savefig(save_path)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"=&gt;&nbsp;saved&nbsp;to&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{save_path}</span>\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plt.close()&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;关闭图像，防止内存泄漏</span><br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;训练循环</span><br>num_epochs&nbsp;=&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">500</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">for</span>&nbsp;epoch&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">in</span>&nbsp;range(<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>,&nbsp;num_epochs&nbsp;+&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">1</span>):<br>&nbsp;&nbsp;&nbsp;&nbsp;ae_loss&nbsp;=&nbsp;train(epoch,&nbsp;ae_model,&nbsp;ae_optimizer,&nbsp;ae_scheduler,&nbsp;ae_criterion)<br>&nbsp;&nbsp;&nbsp;&nbsp;vae_loss_val&nbsp;=&nbsp;train(epoch,&nbsp;vae_model,&nbsp;vae_optimizer,&nbsp;vae_scheduler,&nbsp;<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">None</span>,&nbsp;is_vae=<span class=\"hljs-literal\" style=\"color: #56b6c2; line-height: 26px;\">True</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;epoch&nbsp;%&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">2</span>&nbsp;==&nbsp;<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">0</span>:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"Epoch&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{epoch}</span>/<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{num_epochs}</span>\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"AE&nbsp;Loss:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{ae_loss:<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">.4</span>f}</span>,&nbsp;VAE&nbsp;Loss:&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{vae_loss_val:<span class=\"hljs-number\" style=\"color: #d19a66; line-height: 26px;\">.4</span>f}</span>\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compare_reconstructions(ae_model,&nbsp;vae_model,&nbsp;epoch)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">#&nbsp;save&nbsp;the&nbsp;model</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_ae_path&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'/root/autodl-tmp/projects/diffuser/ckpts/custom/ae_vae/ae.pth'</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save_vae_path&nbsp;=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">'/root/autodl-tmp/projects/diffuser/ckpts/custom/ae_vae/vae.pth'</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;torch.save(ae_model,&nbsp;save_ae_path);&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"=&gt;&nbsp;saved&nbsp;model&nbsp;to&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{save_ae_path}</span>\"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;torch.save(vae_model,&nbsp;save_vae_path);&nbsp;print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">f\"=&gt;&nbsp;saved&nbsp;model&nbsp;to&nbsp;<span class=\"hljs-subst\" style=\"color: #e06c75; line-height: 26px;\">{save_vae_path}</span>\"</span>)<br><br>print(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Training&nbsp;complete!\"</span>)<br></code></pre> \n<h1 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: block;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 24px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: bold; display: block;\">总结</span><span class=\"suffix\" style=\"display: none;\"></span></h1> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">至此我们学习了 AE/VAE 的理论，并亲自动手训练/推理了两种模型并比较了效果，并得出如下结论：</p> \n<blockquote class=\"multiquote-1\" data-tool=\"mdnice编辑器\" style=\"margin-top: 20px; margin-bottom: 20px; margin-left: 0px; margin-right: 0px; padding-top: 10px; padding-bottom: 10px; padding-left: 20px; padding-right: 10px; border-top-style: none; border-bottom-style: none; border-left-style: solid; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0.05); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px; display: block; overflow-x: auto; overflow-y: auto;\"> <span style=\"display: none; color: rgb(0, 0, 0); font-size: 16px; line-height: 1.5em; letter-spacing: 0em; text-align: left; font-weight: normal;\"></span> \n <p style=\"text-indent: 0em; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px; color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;\">[!TIP] 只要训练得当，AE 和 VAE 都能很好的压缩/反压缩图片，重构的效果很棒，肉眼看不出显著的差异！</p> \n</blockquote> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 16px; line-height: 1.8em; letter-spacing: 0em; text-align: left; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">想学习更多 AIGC 技术干货？关注公众号立即获取！</p> \n<figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; display: flex; flex-direction: column; justify-content: center; align-items: center;\"> \n <img src=\"https://files.mdnice.com/user/31739/b8d11c97-b5e1-4101-bc84-f9cf42f3d689.png\" alt style=\"display: block; margin-top: 0px; margin-right: auto; margin-bottom: 0px; margin-left: auto; max-width: 100%; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; object-fit: fill; box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;\"> \n</figure>",
                "title": "Diffusion 模型生成图片太慢了？用 AE(AutoEncoder) 和 VAE 加速一波！ ",
                "categoryId": 3,
                "categoryName": "人工智能",
                "tagId": 115,
                "tagName": "人工智能",
                "userId": 31739,
                "userOutId": "593390970134",
                "username": "小机智9404",
                "avatar": "",
                "description": "Diffusion模型生成图片太慢了？用AE(AutoEncoder)和VAE(VariationalAutoEncoder)压缩图片加速一波！本文分为两个部分：理论学习和代码实践。先预览一下AE和V",
                "level": 1,
                "publishTime": "2024/09/01",
                "readingNum": 3,
                "likeNum": 0,
                "introduction": null,
                "followWords": null,
                "followPic": null,
                "isFollowing": false,
                "isLike": false,
                "isSelf": false,
                "type": 1,
                "isVisible": true,
                "invisibleReason": null,
                "writingColumn": {
                    "columnOutId": "2c7128b53544428f853f82bcb6faad0e",
                    "name": "默认专栏",
                    "briefIntro": "这是一个默认专栏",
                    "cover": "https://files.mdnice.com/common/community/default-column-cover.jpg",
                    "writingNum": 2,
                    "createTime": "2024-08-06 19:05"
                }
            }
        },
        "__N_SSP": true
    },
    "page": "/writing/[id]",
    "query": {
        "id": "92a8c61ec0d34c70a25df9c30e4292d7"
    },
    "buildId": "ErZPkD4oq6iwH2nj6Dpcx",
    "isFallback": false,
    "gssp": true,
    "appGip": true
}