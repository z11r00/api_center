{
    "props": {
        "pageProps": {
            "query": {
                "id": "f196dff2e1e541a79364fc7048111058"
            },
            "ieBrowser": false,
            "needRefresh": false,
            "writingDetail": {
                "id": 83096,
                "outId": "f196dff2e1e541a79364fc7048111058",
                "articleOutId": "f196dff2e1e541a79364fc7048111058",
                "html": "<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">1. 简介</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">抽象工厂模式（Abstract Factory Pattern）是一种创建型设计模式，它提供了一个接口，用于创建一系列相关或相互依赖的对象，而无需指定它们的具体类。抽象工厂模式通过为对象创建提供一个抽象接口，使得同一族的产品可以一起使用，并能保证产品的一致性。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在Golang中，抽象工厂模式可以用接口和工厂函数来实现。通过定义一组抽象接口，并由具体工厂类实现这些接口，客户端可以通过工厂类创建具体的产品对象。</p> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">2. 使用场景</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">使用简单工厂模式的典型场景包括：</p> \n<ul data-tool=\"mdnice编辑器\" style=\"list-style-type: disc; margin-top: 8px; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 25px; padding-right: 0px; color: rgb(0, 0, 0);\"> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">跨平台UI框架</strong>：当一个系统需要支持不同平台（如Windows、macOS、Linux）的用户界面时，可以使用抽象工厂模式来创建不同平台下的UI组件。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">数据库访问层</strong>：当一个系统需要支持不同数据库（如MySQL、PostgreSQL、SQLite）时，可以使用抽象工厂模式来创建不同数据库的连接、查询、事务处理等操作。 \n  </section></li> \n <li> \n  <section style=\"margin-top: 5px; margin-bottom: 5px; color: rgb(1, 1, 1); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: left; font-weight: normal;\"> <strong style=\"color: rgb(255, 79, 121); font-weight: bold; background-attachment: scroll; background-clip: border-box; background-color: rgba(0, 0, 0, 0); background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 3px; border-bottom-width: 3px; border-left-width: 3px; border-right-width: 3px; border-top-color: rgba(0, 0, 0, 0.4); border-bottom-color: rgba(0, 0, 0, 0.4); border-left-color: rgba(0, 0, 0, 0.4); border-right-color: rgba(0, 0, 0, 0.4); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">多种支付方式</strong>：当系统需要支持多种支付方式（如支付宝、微信、信用卡）时，可以使用抽象工厂模式来创建不同支付方式的处理对象。 \n  </section></li> \n</ul> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">3. 代码示例</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">下面是一个关于抽象工厂模式的Golang实现示例，我们将构建一个UI组件的抽象工厂，来创建不同操作系统下的按钮和文本框。</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">package</span>&nbsp;main<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"fmt\"</span><br>)<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;Button&nbsp;是一个抽象接口，表示按钮</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;Button&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">interface</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Render()&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">string</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;TextBox&nbsp;是一个抽象接口，表示文本框</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;TextBox&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">interface</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;Display()&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">string</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;WindowsButton&nbsp;是&nbsp;Windows&nbsp;操作系统的具体按钮实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;WindowsButton&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(wb&nbsp;WindowsButton)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Render</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Rendering&nbsp;Windows&nbsp;Button\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;WindowsTextBox&nbsp;是&nbsp;Windows&nbsp;操作系统的具体文本框实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;WindowsTextBox&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(wt&nbsp;WindowsTextBox)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Display</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Displaying&nbsp;Windows&nbsp;TextBox\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;MacButton&nbsp;是&nbsp;macOS&nbsp;操作系统的具体按钮实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;MacButton&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(mb&nbsp;MacButton)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Render</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Rendering&nbsp;Mac&nbsp;Button\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;MacTextBox&nbsp;是&nbsp;macOS&nbsp;操作系统的具体文本框实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;MacTextBox&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(mt&nbsp;MacTextBox)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Display</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">string</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Displaying&nbsp;Mac&nbsp;TextBox\"</span><br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;GUIFactory&nbsp;是一个抽象工厂接口，用于创建一系列相关对象</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;GUIFactory&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">interface</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateButton()&nbsp;Button<br>&nbsp;&nbsp;&nbsp;&nbsp;CreateTextBox()&nbsp;TextBox<br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;WindowsFactory&nbsp;是&nbsp;Windows&nbsp;操作系统的具体工厂实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;WindowsFactory&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(wf&nbsp;WindowsFactory)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">CreateButton</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Button</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;WindowsButton{}<br>}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(wf&nbsp;WindowsFactory)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">CreateTextBox</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">TextBox</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;WindowsTextBox{}<br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;MacFactory&nbsp;是&nbsp;macOS&nbsp;操作系统的具体工厂实现</span><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">type</span>&nbsp;MacFactory&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">struct</span>{}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(mf&nbsp;MacFactory)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">CreateButton</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">Button</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;MacButton{}<br>}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-params\" style=\"line-height: 26px;\">(mf&nbsp;MacFactory)</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">CreateTextBox</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">TextBox</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">return</span>&nbsp;MacTextBox{}<br>}<br><br><span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;Client&nbsp;代码</span><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">main</span><span class=\"hljs-params\" style=\"line-height: 26px;\">()</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">var</span>&nbsp;factory&nbsp;GUIFactory<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;假设我们要生成&nbsp;Windows&nbsp;操作系统的组件</span><br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;=&nbsp;WindowsFactory{}<br>&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;:=&nbsp;factory.CreateButton()<br>&nbsp;&nbsp;&nbsp;&nbsp;textBox&nbsp;:=&nbsp;factory.CreateTextBox()<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(button.Render())<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(textBox.Display())<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-comment\" style=\"color: #5c6370; font-style: italic; line-height: 26px;\">//&nbsp;假设我们要生成&nbsp;macOS&nbsp;操作系统的组件</span><br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;=&nbsp;MacFactory{}<br>&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;=&nbsp;factory.CreateButton()<br>&nbsp;&nbsp;&nbsp;&nbsp;textBox&nbsp;=&nbsp;factory.CreateTextBox()<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(button.Render())<br>&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(textBox.Display())<br>}<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在这个示例中，GUIFactory 是抽象工厂接口，定义了两个抽象方法：CreateButton 和 CreateTextBox。WindowsFactory 和 MacFactory 分别实现了这个接口，用于创建具体的按钮和文本框对象。客户端代码通过选择不同的工厂来创建不同平台的UI组件。</p> \n<h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: 0px; margin-right: 0px; align-items: center; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: flex; flex-direction: column; float: unset; height: auto; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; width: auto; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: url('https://files.mdnice.com/pic/d1e2129b-30a8-443d-8ebb-a3f7aa09141e.png'); background-origin: padding-box; background-position-x: 50%; background-position-y: 50%; background-repeat: no-repeat; background-size: contain; width: 40px; height: 20px; align-items: unset; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; color: rgb(0, 0, 0); display: inline-block; font-size: 22px; font-weight: bold; flex-direction: unset; float: unset; justify-content: unset; letter-spacing: 0px; line-height: 1.5em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); text-shadow: rgb(171, 224, 225) 4px 3px 0px; line-height: 1.5em; letter-spacing: 0em; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: none; border-bottom-style: none; border-left-style: none; border-right-style: none; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; transform: none; width: auto; -webkit-box-reflect: unset;\">3.2 单元测试</span><span class=\"suffix\" style=\"display: none;\"></span></h3> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">下面是针对上述代码的单元测试：</p> \n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px; text-align: left; margin-top: 10px; margin-bottom: 10px; margin-left: 0px; margin-right: 0px; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px;\"><span style=\"display: block; background: url(https://files.mdnice.com/point.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;\"></span><code class=\"hljs\" style=\"overflow-x: auto; padding: 16px; color: #abb2bf; padding-top: 15px; background: #282c34; border-radius: 5px; display: -webkit-box; font-family: Consolas, Monaco, Menlo, monospace; font-size: 12px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">package</span>&nbsp;main<br><br><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">import</span>&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"testing\"</span><br>)<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">TestWindowsFactory</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(t&nbsp;*testing.T)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;:=&nbsp;WindowsFactory{}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;:=&nbsp;factory.CreateButton()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;button.Render()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Rendering&nbsp;Windows&nbsp;Button\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Rendering&nbsp;Windows&nbsp;Button',&nbsp;got&nbsp;'%s'\"</span>,&nbsp;button.Render())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;textBox&nbsp;:=&nbsp;factory.CreateTextBox()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;textBox.Display()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Displaying&nbsp;Windows&nbsp;TextBox\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Displaying&nbsp;Windows&nbsp;TextBox',&nbsp;got&nbsp;'%s'\"</span>,&nbsp;textBox.Display())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><br><span class=\"hljs-function\" style=\"line-height: 26px;\"><span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">func</span>&nbsp;<span class=\"hljs-title\" style=\"color: #61aeee; line-height: 26px;\">TestMacFactory</span><span class=\"hljs-params\" style=\"line-height: 26px;\">(t&nbsp;*testing.T)</span></span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;factory&nbsp;:=&nbsp;MacFactory{}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;:=&nbsp;factory.CreateButton()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;button.Render()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Rendering&nbsp;Mac&nbsp;Button\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Rendering&nbsp;Mac&nbsp;Button',&nbsp;got&nbsp;'%s'\"</span>,&nbsp;button.Render())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;textBox&nbsp;:=&nbsp;factory.CreateTextBox()<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-keyword\" style=\"color: #c678dd; line-height: 26px;\">if</span>&nbsp;textBox.Display()&nbsp;!=&nbsp;<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Displaying&nbsp;Mac&nbsp;TextBox\"</span>&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.Errorf(<span class=\"hljs-string\" style=\"color: #98c379; line-height: 26px;\">\"Expected&nbsp;'Displaying&nbsp;Mac&nbsp;TextBox',&nbsp;got&nbsp;'%s'\"</span>,&nbsp;textBox.Display())<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br></code></pre> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">测试代码验证了两个工厂类的创建方法是否正确生成了相应的对象实例，并且确保这些实例的行为符合预期。</p> \n<h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px; margin-bottom: 15px; margin-left: auto; margin-right: auto; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: linear-gradient(to left, rgb(253, 213, 231), rgb(194, 226, 249)); background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; width: auto; height: auto; align-items: unset; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(62, 62, 62); border-bottom-color: rgb(62, 62, 62); border-left-color: rgb(62, 62, 62); border-right-color: rgb(62, 62, 62); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: table; flex-direction: unset; float: unset; justify-content: unset; line-height: 1.5em; overflow-x: unset; overflow-y: unset; padding-top: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; position: relative; text-align: left; text-shadow: none; transform: none; -webkit-box-reflect: unset;\"><span class=\"prefix\" style=\"display: none;\"></span><span class=\"content\" style=\"font-size: 18px; color: rgb(0, 0, 0); line-height: 1.5em; letter-spacing: 0em; padding-top: 10px; padding-bottom: 10px; padding-left: 10px; padding-right: 10px; align-items: unset; background-attachment: scroll; background-clip: border-box; background-color: transparent; background-image: none; background-origin: padding-box; background-position-x: 0%; background-position-y: 0%; background-repeat: no-repeat; background-size: auto; border-top-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-style: solid; border-top-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-right-width: 1px; border-top-color: rgb(0, 0, 0); border-bottom-color: rgb(0, 0, 0); border-left-color: rgb(0, 0, 0); border-right-color: rgb(0, 0, 0); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; box-shadow: none; display: block; font-weight: bold; flex-direction: unset; float: unset; height: auto; justify-content: unset; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; overflow-x: unset; overflow-y: unset; position: relative; text-align: left; text-indent: 0em; text-shadow: none; transform: translate3d(-5px, -5px, 0px); width: auto; -webkit-box-reflect: unset;\">4. 总结</span><span class=\"suffix\" style=\"display: none;\"></span></h2> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">抽象工厂模式通过提供一组创建对象的接口，使得客户端可以通过使用这些接口来创建一系列相关的对象，而无需指定具体的类。这个模式非常适合在需要创建多个相关对象，并且这些对象可能需要在不同的环境下有不同实现的场景。</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">在Golang中，抽象工厂模式可以帮助我们更好地组织代码，使代码更加模块化和易于扩展。通过将对象的创建过程抽象出来，客户端代码不需要关心具体的实现细节，只需通过工厂接口获取所需的对象即可.</p> \n<p data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0); font-size: 15px; line-height: 1.8em; letter-spacing: 0em; text-align: center; text-indent: 0em; margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; padding-top: 8px; padding-bottom: 8px; padding-left: 0px; padding-right: 0px;\">尽管抽象工厂模式带来了很好的模块化和扩展性，但在实际使用中也要注意工厂类的复杂度，避免引入过多的抽象层次。如果系统中产品种类过多，可能会导致工厂类变得笨重，不易维护。因此，在设计时应根据具体需求选择合适的设计模式。</p>",
                "title": "Golang 设计模式之抽象工厂模式",
                "categoryId": 1,
                "categoryName": "后端",
                "tagId": 100,
                "tagName": "后端",
                "userId": 74412,
                "userOutId": "699359733079",
                "username": "wed",
                "avatar": "",
                "description": "1.简介抽象工厂模式（AbstractFactoryPattern）是一种创建型设计模式，它提供了一个接口，用于创建一系列相关或相互依赖的对象，而无需指定它们的具体类。抽象工厂模式通过为对象创建提供一",
                "level": 1,
                "publishTime": "2024/09/04",
                "readingNum": 2,
                "likeNum": 0,
                "introduction": null,
                "followWords": null,
                "followPic": null,
                "isFollowing": false,
                "isLike": false,
                "isSelf": false,
                "type": 1,
                "isVisible": true,
                "invisibleReason": null,
                "writingColumn": {
                    "columnOutId": "a2297b1c0bd34c40a755b555fb068703",
                    "name": "默认专栏",
                    "briefIntro": "这是一个默认专栏",
                    "cover": "https://files.mdnice.com/common/community/default-column-cover.jpg",
                    "writingNum": 3,
                    "createTime": "2024-09-02 11:56"
                }
            }
        },
        "__N_SSP": true
    },
    "page": "/writing/[id]",
    "query": {
        "id": "f196dff2e1e541a79364fc7048111058"
    },
    "buildId": "ErZPkD4oq6iwH2nj6Dpcx",
    "isFallback": false,
    "gssp": true,
    "appGip": true
}